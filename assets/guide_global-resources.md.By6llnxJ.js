import{_ as e,c as a,o,a3 as t}from"./chunks/framework.Cy24DNF9.js";const _=JSON.parse('{"title":"全局资源","description":"","frontmatter":{},"headers":[],"relativePath":"guide/global-resources.md","filePath":"guide/global-resources.md"}'),s={name:"guide/global-resources.md"},c=t('<h1 id="全局资源" tabindex="-1">全局资源 <a class="header-anchor" href="#全局资源" aria-label="Permalink to &quot;全局资源&quot;">​</a></h1><h2 id="图片" tabindex="-1">图片 <a class="header-anchor" href="#图片" aria-label="Permalink to &quot;图片&quot;">​</a></h2><p>框架用到的图片资源都放在 <code>/src/assets/images/</code> 目录下，可自行新建文件夹分类管理。</p><h2 id="样式" tabindex="-1">样式 <a class="header-anchor" href="#样式" aria-label="Permalink to &quot;样式&quot;">​</a></h2><p>样式存放目录为 <code>/src/assets/styles/</code> ，因为 Vue 的文件特性，页面样式建议写在 <code>.vue</code> 文件里，所以该目录只存放全局样式，方便统一管理。</p><p>此目录下还有一个特殊目录，即 <code>/src/assets/styles/resources/</code> ，这是全局 SCSS 资源目录，首先这个目录里只支持 <code>.scss</code> 文件，其次在这个目录里的文件，无需在页面上引用即可生效并使用。</p><p>同样，精灵图目录下生成的 SCSS 资源也是全局可调用的。</p><div class="tip custom-block"><p class="custom-block-title">说明</p><p>全局 SCSS 资源并不是全局样式，是变量、@mixin 、@function 这些东西</p></div><h2 id="组件" tabindex="-1">组件 <a class="header-anchor" href="#组件" aria-label="Permalink to &quot;组件&quot;">​</a></h2><h3 id="公共组件" tabindex="-1">公共组件 <a class="header-anchor" href="#公共组件" aria-label="Permalink to &quot;公共组件&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">说明</p><p>公共组件在使用时，无需手动引入，框架会在你使用时自动引入，该特性由 <a href="https://github.com/unplugin/unplugin-vue-components" target="_blank" rel="noreferrer">unplugin-vue-components</a> 提供支持。</p></div><p>公共组件存放在 <code>/src/components/</code> 目录下，每个组件按文件夹进行区分。</p><p>每个组件的文件夹内至少保留一个文件名为 <code>index.vue</code> 的组件入口（可参考 <code>SvgIcon</code> 组件），文件夹名称即为组件名。</p><p>推荐使用 <code>pnpm new</code> 指令进行组件生成，详细可查看《<a href="./plop.html">代码文件自动生成</a>》。</p><h3 id="局部组件" tabindex="-1">局部组件 <a class="header-anchor" href="#局部组件" aria-label="Permalink to &quot;局部组件&quot;">​</a></h3><p>局部组件没有提供专门的存放目录，我们建议采用就近原则，你可以在每个模块的文件夹下，建立一个 <code>components</code> 文件夹专门用于存放局部组件。</p>',16),r=[c];function l(d,n,i,p,u,h){return o(),a("div",null,r)}const b=e(s,[["render",l]]);export{_ as __pageData,b as default};
